/**
 * PDF to Image
 * Author: A.I Raju
 * Date: 05-03-2025
 * Description: This script is used to convert PDF files to images using PDF.js library.
 * 
 */

pdfjsLib.GlobalWorkerOptions.workerSrc="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.7.107/pdf.worker.min.js";const dropZone=document.getElementById("dropZone"),fileInput=document.getElementById("fileInput"),fileInputBtn=document.getElementById("fileInputBtn"),previewImages=document.getElementById("previewImages"),previewCard=document.getElementById("previewCard"),downloadBtn=document.getElementById("downloadBtn"),convertingStatus=document.getElementById("convertingStatus");var convertedImageCount="";let convertedImages=[];async function handleFiles(e){if(0===e.length)return void showToast("Please select PDF files only.");if(e.length>30)return void showToast("You can only convert 30 PDF files at a time.","danger");convertedImages=[],previewImages.innerHTML="",downloadBtn.style.display="none",previewCard.classList.remove("d-none"),fileInputBtn.setAttribute("disabled",!0),showToast('<div class="spinner-border text-dark spinner-border-sm mt-1"></div> Converting PDF to Images...',"primary"),convertingStatus.innerHTML='\n        <div class="bg-white rounded-3 shadow-sm p-2 border mb-3">\n            <div class="p-2 text-center">\n                <div class="spinner-border text-dark mb-1"></div>\n                <h3 class="text-center fs-5 fw-bold">Converting PDF to Images</h3>\n                <span class="text-dark">Converted Images: <span class="convertedImageCount">0</span></span>\n            </div>\n            <div class="conversion-progress">\n                <div class="progress mb-2 w-50 m-auto">\n                    <div class="progress-bar bg-dark" role="progressbar" style="width: 0%">0%</div>\n                </div>\n            </div>\n            <div class="d-block text-center mb-1">\n                <button class="btn btn-danger btn-sm shadow-sm rounded-1 m-auto" style="width:180px" onclick="window.location.reload()">Cancel</button>\n            </div>\n        </div>\n    ';const t=document.querySelector(".progress-bar");convertedImageCount=document.querySelectorAll(".convertedImageCount");for(let n of e)try{const a=await n.arrayBuffer(),o=await pdfjsLib.getDocument(a).promise;for(let a=1;a<=o.numPages;a++){const s=await o.getPage(a),r=s.getViewport({scale:2}),d=document.createElement("canvas"),i=d.getContext("2d");d.width=r.width,d.height=r.height,await s.render({canvasContext:i,viewport:r}).promise;const c=d.toDataURL("image/png");convertedImages.push({name:`${n.name}-page-${a}.png`,data:c});const l=document.createElement("div");l.className="col",l.innerHTML=`\n                    <div class="image-card bg-light border shadow-sm">\n                        <img src="${c}" class="card-img-top preview-image" data-file-name="${n.name}-page-${a}.png" class="img-fluid w-50"/>\n                        <div class="card-btn">\n                            <button class="btn btn-sm btn-primary" title="download" onclick="downloadSingleImage('${n.name}-page-${a}.png')"><i class="bi bi-download"></i></button>\n                            <button class="btn btn-sm btn-danger" title="Remove this image" onclick="removeConvertedImage('${n.name}-page-${a}.png')"><i class="bi bi-x"></i></button>\n                        </div>\n                        <h6 class="file-name">${n.name} - Page ${a}</h6>\n                    </div>\n                `,previewImages.appendChild(l),updateProgress(t,Math.round(convertedImages.length/(e.length*o.numPages)*100)),convertedImageCount.forEach((e=>{e.textContent=convertedImages.length}))}}catch(e){showToast(`Error converting ${n.name}: ${e.message}`)}convertingStatus.innerHTML=`\n        <div class="py-3 bg-white rounded-3 shadow-sm border p-4 mb-3">\n            <div class="p-2 text-center">\n                <i class="bi bi-check-circle-fill text-success mb-2"></i>\n                <h3 class="text-center fs-5 fw-bold">Conversion Completed</h3>\n                <span class="text-secondary fw-bold">Total Images: <span class="convertedImageCount">${convertedImages.length}</span></span>\n            </div>\n        </div>\n    `,convertedImages.length>0&&(downloadBtn.style.display="inline-block"),fileInputBtn.removeAttribute("disabled"),showToast('<i class="bi bi-check-circle-fill fs-5 text-success"></i> Conversion Completed!',"success")}function downloadSingleImage(e){const t=event.target.closest(".card").querySelector(".preview-image"),n=document.createElement("a");n.href=t.src,n.download=e,n.click()}function removeConvertedImage(e){convertedImages=convertedImages.filter((t=>!t.name.includes(e)));document.querySelectorAll(".preview-image").forEach((t=>{t.getAttribute("data-file-name")===e&&t.closest(".col").remove()})),convertedImageCount.forEach((e=>{e.textContent=convertedImages.length})),0===convertedImages.length&&(downloadBtn.style.display="none",previewCard.classList.add("d-none"),convertingStatus.innerHTML="",showToast("All images removed.","info"))}function updateProgress(e,t){e.style.width=t+"%",e.textContent=t+"%"}dropZone.addEventListener("dragover",(e=>{e.preventDefault(),dropZone.classList.add("dragover")})),dropZone.addEventListener("dragleave",(()=>{dropZone.classList.remove("dragover")})),dropZone.addEventListener("drop",(e=>{e.preventDefault(),dropZone.classList.remove("dragover");handleFiles(Array.from(e.dataTransfer.files).filter((e=>"application/pdf"===e.type)))})),fileInput.addEventListener("change",(e=>{handleFiles(Array.from(e.target.files).filter((e=>"application/pdf"===e.type)))})),downloadBtn.addEventListener("click",(async()=>{const e=new JSZip;convertedImages.forEach((t=>{const n=t.data.split(",")[1];e.file(t.name,n,{base64:!0})}));const t=await e.generateAsync({type:"blob"}),n=document.createElement("a");n.href=URL.createObjectURL(t),n.download="converted-images.zip",n.click()}));const toastContainer=document.createElement("div");function showToast(e,t="danger"){const n="toast-"+Date.now(),a=`\n    <div id="${n}" class="toast border-0 shadow-sm" role="alert" aria-live="assertive" aria-atomic="true">\n        <div class="toast-header bg-${t} text-white">\n        <strong class="me-auto">Notification</strong>\n        <button type="button" class="btn-close bg-light" data-bs-dismiss="toast" aria-label="Close"></button>\n        </div>\n        <div class="toast-body bg-white text-${t}">\n        ${e}\n        </div>\n    </div>\n    `;toastContainer.insertAdjacentHTML("beforeend",a);const o=document.getElementById(n);new bootstrap.Toast(o,{autohide:!0,delay:3e3}).show(),o.addEventListener("hidden.bs.toast",(()=>o.remove()))}toastContainer.className="toast-container position-fixed top-0 end-0 p-3",document.body.appendChild(toastContainer);